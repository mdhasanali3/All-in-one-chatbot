version: '3.8'

services:
  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: ai-assistant-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-assistant-network
    restart: unless-stopped

  # Keycloak for authentication
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: ai-assistant-keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
    ports:
      - "8080:8080"
    command: start-dev
    depends_on:
      - postgres
    networks:
      - ai-assistant-network
    restart: unless-stopped

  # PostgreSQL for Keycloak
  postgres:
    image: postgres:15-alpine
    container_name: ai-assistant-postgres
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai-assistant-network
    restart: unless-stopped

  # FastAPI Gateway
  gateway:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile.gateway
    container_name: ai-assistant-gateway
    environment:
      - KEYCLOAK_SERVER_URL=http://keycloak:8080
      - KEYCLOAK_REALM=ai-assistant
      - KEYCLOAK_CLIENT_ID=ai-assistant-client
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - ACCESS_KEY=${ACCESS_KEY:-admin_hasan_007_no_exit}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - keycloak
    volumes:
      - ./data:/app/data
    networks:
      - ai-assistant-network
    restart: unless-stopped

  # Streamlit Frontend
  frontend:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile.frontend
    container_name: ai-assistant-frontend
    environment:
      - BACKEND_URL=http://gateway:8000
    ports:
      - "8501:8501"
    depends_on:
      - gateway
    networks:
      - ai-assistant-network
    restart: unless-stopped

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: ai-assistant-prometheus
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - ai-assistant-network
    restart: unless-stopped

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: ai-assistant-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana_data:/var/lib/grafana
      - ../monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - ai-assistant-network
    restart: unless-stopped

networks:
  ai-assistant-network:
    driver: bridge

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:
